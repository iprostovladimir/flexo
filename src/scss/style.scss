@use "sass:math";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
//&display=swap - добавить при подключении через плагин

// Подключить если есть локальные файлы шрифтов
@import "fonts/fonts";

// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
// Подключить если есть файл иконочного шрифта
//@import "fonts/icons";

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: "Inter";
$fontSize: rem(14); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$mainColor: #000; // Цвет шрифта по умолчанию

// НАСТРОЙКИ ===============================================================================================================================================================================================================================================================================================
// Минимальная ширина страницы
$minWidth: 320;

// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1520;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 48;

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// Ширина страбатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em(
  $containerWidth
); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Обнуление и общие параметры ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";
.ie-error {
  display: none;
}
body {
  &::-webkit-scrollbar {
    height: 5px;
    width: 5px;
  }
  &::-webkit-scrollbar-track {
    background: transparent;
  }
  &::-webkit-scrollbar-thumb {
    background: var(--blue);
    border-radius: 10px;
  }

  &._is-ie {
    .wrapper {
      display: none;
    }
    .ie-error {
      display: block;
    }
  }
  // Скролл заблокирован
  .lock & {
    overflow: hidden;
    touch-action: none;
  }
  // Сайт загружен
  .loaded & {
  }
}

//========================================================================================================================================================

.loaded {
  ._loaded {
    opacity: 0 !important;
  }
  .main__row {
    &._watcher-view {
      @media (min-width: $tablet) {
        .main__title,
        .main__text,
        .main__link {
          transform: translate(rem(0), rem(0));
          opacity: 1;
        }
        .main__svg {
          opacity: 1;
          transform: translate(rem(0), rem(0));
        }
      }
    }
  }

  ._title {
    &._watcher-view {
      @media (min-width: $tablet) {
        opacity: 1;
        transform: translate(rem(0), rem(0));
      }
    }
  }

  .technologies__column {
    &:nth-child(odd),
    &:nth-child(even) {
      &._watcher-view {
        @media (min-width: $tablet) {
          opacity: 1;
          transform: translate(rem(0), rem(0));
        }
      }
    }
  }
  .main__svg-bg {
    animation: bgUp 0.5s linear 1s both;
  }

  .main__svg-group {
    animation: move01 15s linear infinite;
  }

  .big--text {
    &._watcher-view {
      opacity: 0.1;
      transform: translate(rem(0), rem(0));
    }
  }

  .partner__content {
    &._watcher-view {
      opacity: 1;
      transform: translate(rem(0), rem(0));
    }
  }
  .partner__svg {
    &._watcher-view {
      opacity: 1;
      transform: translate(rem(0), rem(0));

      .partner__svg-icon01,
      .partner__svg-icon03 {
        animation: move01 15s linear infinite;
      }

      .partner__svg-icon02 {
        animation: move01 15s linear infinite reverse;
      }
    }
  }

  .payment__row {
    &._watcher-view {
      opacity: 1;
      transform: translate(rem(0), rem(0));
    }
  }

  .payment__items {
    &._watcher-view {
      opacity: 1;
      transform: translate(rem(0), rem(0));
    }
  }
  .column-about--right,
  .column-about--left,
  .column-about--center {
    &._watcher-view {
      opacity: 1;
      transform: translate(rem(0), rem(0));
    }
  }
}

// Оболочка ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
  min-height: 100%;
  display: flex;
  flex-direction: column;
  transition: all 0.5s;
  overflow: hidden;
  //   background: linear-gradient(to bottom, white, black);
  background: var(--backgrand-wrht);

  // Прижимаем footer
  > main {
    flex: 1 1 auto;
  }
  // Фикс для слайдеров
  > * {
    min-width: 0;
  }
}

// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {
  // Отзывчивая
  [class*="__container"] {
    @if ($maxWidthContainer>0) {
      max-width: rem($maxWidthContainer);
      box-sizing: content-box;
      margin: 0 auto;

      @media (max-width: $mobile) {
        padding: rem(0) rem(16);
      }
    }
    @if ($containerPadding>0) {
      padding: 0 rem(math.div($containerPadding, 2));
    }
  }
} @else {
  // По брейк-поинтам
  [class*="__container"] {
    margin: 0 auto;
    @if ($maxWidthContainer>0) {
      max-width: rem($maxWidthContainer);
      box-sizing: content-box;
    } @else {
      @if ($containerPadding>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
    @media (max-width: $pc) {
      max-width: rem(970);
    }
    @media (max-width: $tablet) {
      max-width: rem(750);
    }
    @media (max-width: $mobile) {
      max-width: none;
      @if ($containerPadding>0 and $maxWidthContainer>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
  }
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомагательных классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base";

// Подключение стилей общих элементов проекта
@import "common";
@import "components/preview";
@import "components/technologies";
@import "components/payment";
@import "components/partner";
@import "components/about";

// Подключение стилей отдельных блоков
@import "header";
@import "footer";

// Подключение стилей отдельных страниц
@import "home";
